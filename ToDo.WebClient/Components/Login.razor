@page "/login"
@using ToDo.WebClient.Identity
@using ToDo.WebClient.Identity.Models
@using ToDo.WebClient.ToDoClient.Models
@inject IAccountManagement Acct
@inject NavigationManager NavigationManager

<PageTitle>Login</PageTitle>

<h1>Login</h1>

<AuthorizeView>
    <Authorized>
        <div class="alert alert-success">You're logged in.</div>
    </Authorized>
    <NotAuthorized>
        @if (errors)
        {
            <div class="alert alert-danger">@errorMessage</div>
        }
        <div class="flex-outer">
            <div>
                <label for="email">
                    Email:
                </label>
                <input required id="email" name="emailInput" placeholder="Enter your email address" type="email" @bind-value="email" />
            </div>
            <div>
                <label for="password">
                    Password:
                </label>
                <input required id="password" name="passwordInput" placeholder="Enter your password" type="password" @bind-value="password" />
            </div>
            <div>
                <button class="btn btn-primary" @onclick="DoLoginAsync">Login</button>
            </div>
        </div>
    </NotAuthorized>
</AuthorizeView>

@code {
    private bool errors;
    private string email = string.Empty;
    private string password = string.Empty;
    private string errorMessage = string.Empty;

    [Parameter] public string? ReturnUrl { get; set; }

    private async Task DoLoginAsync()
    {
        errors = false;
        errorMessage = string.Empty;

        if (string.IsNullOrWhiteSpace(email))
        {
            errors = true;
            errorMessage = "Email is required.";
            return;
        }

        if (string.IsNullOrWhiteSpace(password))
        {
            errors = true;
            errorMessage = "Password is required.";
            return;
        }

        try
        {
            FormResult result = await Acct.LoginAsync(email, password);

            if (result.Succeeded == true)
            {
                email = password = string.Empty;
                NavigationManager.NavigateTo(ReturnUrl ?? "/");
            }
            else
            {
                errors = true;
                errorMessage = "Login failed. Please check your credentials and try again.";
            }
        }
        catch (Exception ex)
        {
            errors = true;
            errorMessage = $"An error occurred: {ex.Message}";
        }
    }
}
