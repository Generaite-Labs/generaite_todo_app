@page "/login"
@using ToDo.WebClient.Identity
@using ToDo.WebClient.Identity.Models
@using ToDo.WebClient.ToDoClient.Models
@using System.Web
@inject IAccountManagement Acct
@inject NavigationManager NavigationManager
@inject NotificationService NotificationService

<PageTitle>Login</PageTitle>

<RadzenCard Style="max-width: 400px; margin: auto; margin-top: 50px;">
    <RadzenText TextStyle="TextStyle.H3" TagName="TagName.H1" Class="mb-4">Login</RadzenText>

    <AuthorizeView>
        <Authorized>
            <RadzenAlert AlertStyle="AlertStyle.Success" ShowIcon="true" AllowClose="false">
                You're logged in.
            </RadzenAlert>
        </Authorized>
        <NotAuthorized>
            <RadzenTemplateForm TItem="LoginModel" Data="@loginModel" Submit="@DoLoginAsync" Context="formContext">
                <RadzenStack Gap="1rem" Class="rz-p-4">
                    <RadzenFormField Text="Email" Variant="Variant.Outlined">
                        <RadzenTextBox Name="Email" @bind-Value="@loginModel.Email" Style="width: 100%;" />
                        <RadzenRequiredValidator Component="Email" Text="Email is required" Popup="true" />
                        <RadzenEmailValidator Component="Email" Text="Provide a valid email address" Popup="true" />
                    </RadzenFormField>
                    <RadzenFormField Text="Password" Variant="Variant.Outlined">
                        <RadzenPassword Name="Password" @bind-Value="@loginModel.Password" Style="width: 100%;" />
                        <RadzenRequiredValidator Component="Password" Text="Password is required" Popup="true" />
                    </RadzenFormField>
                    <RadzenButton ButtonType="ButtonType.Submit" Text="Login" ButtonStyle="ButtonStyle.Primary" Class="rz-w-100" />
                    <RadzenLink Path="/forgotpassword" Text="Forgot Password?" Style="display: block; text-align: center; margin-top: 1rem;" />
                </RadzenStack>
            </RadzenTemplateForm>
        </NotAuthorized>
    </AuthorizeView>
</RadzenCard>

@code {
    private LoginModel loginModel = new LoginModel();

    [Parameter]
    [SupplyParameterFromQuery(Name = "email")]
    public string? Email { get; set; }

    [Parameter]
    [SupplyParameterFromQuery]
    public string? ReturnUrl { get; set; }

    protected override void OnInitialized()
    {
        if (!string.IsNullOrEmpty(Email))
        {
            loginModel.Email = Email;
        }
    }

    private async Task DoLoginAsync()
    {
        try
        {
            FormResult result = await Acct.LoginAsync(loginModel.Email, loginModel.Password);

            if (result.Succeeded == true)
            {
                loginModel = new LoginModel();
                NavigationManager.NavigateTo(ReturnUrl ?? "/");
            }
            else
            {
                NotificationService.Notify(NotificationSeverity.Error, "Login Failed", "Please check your credentials and try again.");
            }
        }
        catch (Exception ex)
        {
            NotificationService.Notify(NotificationSeverity.Error, "Error", $"An error occurred: {ex.Message}");
        }
    }

    private class LoginModel
    {
        public string Email { get; set; } = string.Empty;
        public string Password { get; set; } = string.Empty;
    }
}
