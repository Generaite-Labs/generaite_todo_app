@page "/register"
@using ToDo.Application.DTOs
@using ToDo.WebClient.ToDoClient.Models
@using ToDo.WebClient.Services
@inject AuthService AuthService
@inject NavigationManager NavigationManager
@inject NotificationService NotificationService

<RadzenCard>
    <h3 class="rz-mb-6">Register</h3>

    <RadzenTemplateForm TItem="RegisterRequest" Data="@registerRequest" Submit="@HandleRegister">
        <div class="rz-mb-6">
            <RadzenFormField Text="Email" Variant="Variant.Outlined" Style="width: 100%;">
                <ChildContent>
                    <RadzenTextBox Name="Email" @bind-Value="@registerRequest.Email" Style="width: 100%;" />
                </ChildContent>
            </RadzenFormField>
            <RadzenRequiredValidator Component="Email" Text="Email is required" />
            <RadzenEmailValidator Component="Email" Text="Provide a valid email address" />
        </div>

        <div class="rz-mb-6">
            <RadzenFormField Text="Password" Variant="Variant.Outlined" Style="width: 100%;">
                <ChildContent>
                    <RadzenPassword Name="Password" @bind-Value="@registerRequest.Password" Style="width: 100%;" />
                </ChildContent>
            </RadzenFormField>
            <RadzenRequiredValidator Component="Password" Text="Password is required" />
            <RadzenLengthValidator Component="Password" Min="6" Text="Password should be at least 6 characters" />
        </div>

        <RadzenButton ButtonType="ButtonType.Submit" Text="Register" ButtonStyle="ButtonStyle.Primary" Class="rz-w-100 rz-mt-4" />
    </RadzenTemplateForm>
</RadzenCard>

@code {
    private RegisterRequest registerRequest = new RegisterRequest();

    private async Task HandleRegister(RegisterRequest request)
    {
        var result = await AuthService.RegisterAsync(request);
        if (result)
        {
            NotificationService.Notify(NotificationSeverity.Success, "Success", "Registration successful. Please log in.");
            NavigationManager.NavigateTo("/login");
        }
        else
        {
            NotificationService.Notify(NotificationSeverity.Error, "Error", "Registration failed. Please check your input and try again.");
        }
    }
}
