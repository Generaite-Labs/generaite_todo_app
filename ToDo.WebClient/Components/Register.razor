@page "/register"
@using ToDo.WebClient.Services
@using ToDo.Application.DTOs
@inject AuthenticationService AuthService
@inject NavigationManager NavigationManager

<h3>Register</h3>

<EditForm Model="@registerDto" OnValidSubmit="HandleRegister">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label for="email">Email:</label>
        <InputText id="email" @bind-Value="registerDto.Email" class="form-control" />
        <ValidationMessage For="@(() => registerDto.Email)" />
    </div>

    <div class="form-group">
        <label for="fullName">Full Name:</label>
        <InputText id="fullName" @bind-Value="registerDto.FullName" class="form-control" />
        <ValidationMessage For="@(() => registerDto.FullName)" />
    </div>

    <div class="form-group">
        <label for="password">Password:</label>
        <InputText id="password" @bind-Value="registerDto.Password" class="form-control" type="password" />
        <ValidationMessage For="@(() => registerDto.Password)" />
    </div>

    <div class="form-group">
        <label for="confirmPassword">Confirm Password:</label>
        <InputText id="confirmPassword" @bind-Value="registerDto.ConfirmPassword" class="form-control" type="password" />
        <ValidationMessage For="@(() => registerDto.ConfirmPassword)" />
    </div>

    <button type="submit" class="btn btn-primary">Register</button>
</EditForm>

@if (!string.IsNullOrEmpty(errorMessage))
{
    <div class="alert alert-danger mt-3">@errorMessage</div>
}

@code {
    private RegisterDto registerDto = new RegisterDto { Email = string.Empty, FullName = string.Empty, Password = string.Empty, ConfirmPassword = string.Empty };
    private string errorMessage = string.Empty;

    private async Task HandleRegister()
    {
        errorMessage = string.Empty;
        var result = await AuthService.Register(registerDto);
        Console.WriteLine(result);
        if (result)
        {
            NavigationManager.NavigateTo("/login");
        }
        else
        {
            errorMessage = "Registration failed. Please try again.";
        }
    }
}